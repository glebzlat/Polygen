# This is the PEG grammar syntax taken from "Parsing Expression Grammars:
# A Recognition-Based Syntastic Foundation" by Bryan Ford with some extensions.

@entry
Grammar    <- Spacing defs=Definition+ EndOfFile              % grammar_action
Definition <- dirs=Directive* Identifier LEFTARROW Expression % def_action

Directive  <- AT DirName Spacing                              % directive_action
DirName    <- Identifier

Expression <- Sequence (SLASH Sequence)*
Sequence   <- Prefix* MetaRule?                               % alt_action
Prefix     <- grp=(MetaName / AND / NOT)? Suffix
Suffix     <- Primary (QUESTION / STAR / PLUS / Repetition)?  % part_action
Primary    <- Identifier !LEFTARROW
            / OPEN Expression CLOSE
            / Literal / Class / grp=DOT
MetaName   <- Identifier EQUAL
MetaRule   <- PERCENT Identifier

Identifier <- IdentStart IdentCont* Spacing
IdentStart <- [a-zA-Z_]
IdentCont  <- IdentStart / [0-9]

Literal    <- ['] seq=(!['] Char)* ['] Spacing                % literal_action
            / ["] seq=(!["] Char)* ["] Spacing                % literal_action
Class      <- '[' (!']' Range)* ']' Spacing                   % class_action
Range      <- Char '-' Char                                   % range_action
            / Char                                            % range_action
Char       <- '\\' char=[nrt'"\[\]\\]                         % esc_char_action
            / '\\' char1=[0-2] char2=[0-7] char3=[0-7]        % oct_char_action
            / '\\' char1=[0-7] char2=[0-7]?                   % oct_char_action
            / '\\u' HexDigit{4}                               % uchar_action
            / !'\\' char=.                                    % any_char_action

Repetition <- '{' grp=(Number ',' Number / Number) '}' Spacing % rep_action
Number     <- chars=[0-9]+                                    % number
HexDigit   <- char=[0-9A-F]                                   % hex_digit

LEFTARROW  <- '<-' Spacing
SLASH      <- '/' Spacing
AND        <- '&' Spacing
NOT        <- '!' Spacing
QUESTION   <- '?' Spacing
STAR       <- '*' Spacing
PLUS       <- '+' Spacing
OPEN       <- '(' Spacing
CLOSE      <- ')' Spacing
DOT        <- '.' Spacing
AT         <- '@' Spacing
EQUAL      <- '=' Spacing
PERCENT    <- '%' Spacing

@ignore
Spacing    <- (Space / Comment)*
Comment    <- '#' (!EndOfLine .)* EndOfLine
Space      <- ' ' / '\t' / EndOfLine
EndOfLine  <- '\r\n' / '\n' / '\r'
EndOfFile  <- !.
